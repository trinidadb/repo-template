name: "Get Terraform Plan"
description: "A composite action to retrieve the terraform plan"

inputs:
  tf_working_dir:
    description: "Directory containing the terraform.tfstate file."
    required: true
  aws_access_key_id:
    description: "AWS Access Key ID."
    required: true
  aws_secret_access_key:
    description: "AWS Secret Access Key."
    required: true

outputs:
  tfplan_path:
    description: "Path to the generated tfplan.json file."
    value: ${{ steps.get-tfplan-json.outputs.tfplan_path }}

runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Terraform init
      run: terraform init
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash
    
    - name: Extract region from terraform outputs
      id: get-region
      run: |
        # This will probably fail if tfstate is empty. To run it initally you will probably have to hardcode teh region value
        value=$(terraform output -raw region || "eu-north-1" )
        echo "region=$value" >> $GITHUB_OUTPUT
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ steps.get-region.outputs.region }}

    - name: Terraform plan
      run: terraform plan -out tfplan.binary
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash

    - name: Terraform show
      run: terraform show -json tfplan.binary > tfplan.json
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash

    - name: Set output for tfplan.json path
      id: get-tfplan-json
      run: echo "tfplan_path=${{ inputs.tf_working_dir }}/tfplan.json" >> $GITHUB_OUTPUT
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash